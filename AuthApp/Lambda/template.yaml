AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AuthApp Lambdas Template

Globals:
  Function:
    Timeout: 10
    Handler: app.lambda_handler
    MemorySize: 128
    Runtime: python3.10
    
Parameters:
  UserPoolID:
    Type: String
  ClientID:
    Type: String

    
Resources:

  AuthLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: CognitoAccessPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
              - cognito-identity:*
              - cognito-idp:*
            Resource: '*'

  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: Functions/AuthApp_AuthFunction
      Role: !GetAtt AuthLambdaExecutionRole.Arn
      Environment:
        Variables:
          UserpoolID: !Ref UserPoolID
          ClientsID: !Ref ClientID
  
  HelloFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: Functions/AuthApp_HelloFunction
      
Outputs:

  AuthFunction:
    Description: "AuthFunctionARN"
    Value: !GetAtt AuthFunction.Arn

  HelloFunctionARN:
    Description: "HelloFunctionARN"
    Value: !GetAtt HelloFunction.Arn

  AuthFunctionUri:
    Description: "AuthFunctionUri"
    Value: !Sub
          - 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations'
          - lambdaArn: !GetAtt AuthFunction.Arn

  HelloFunctionUri:
    Description: "HelloFunctionUri"
    Value: !Sub
          - 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lambdaArn}/invocations'
          - lambdaArn: !GetAtt HelloFunction.Arn